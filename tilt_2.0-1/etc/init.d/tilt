#!/bin/sh
#
# /etc/init.d/tilt -- startup script for the Tilt service
#
# Written by Desmond Schmidt desmond.allan.schmidt@gmail.com
#

### BEGIN INIT INFO
# Provides:          tilt
# Required-Start:    mongodb $remote_fs $syslog
# Required-Stop:     mongodb $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Tilt
# Description:       Tilt text to image alignment
### END INIT INFO

# Exit if the package is not installed
#-e not -x because jars don't have to be executable
[ -e "/usr/local/bin/tilt/TILT2.jar" ] || exit 5
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Tilt text to image linking tool"
NAME=tilt
DAEMON=/usr/local/bin/tilt/TILT2.jar
LIBPATH=`java -cp /usr/local/bin/tilt/ LibPath`:/usr/local/lib
# Load the VERBOSE setting and other rcS variables
. /lib/lsb/init-functions

getjarpaths()
{
  JARPATH=""
  for f in $1/*.jar
  do
    JARPATH="$JARPATH:$f"
  done
  echo $JARPATH
  return
}
do_start() {
  JARPATHS=`getjarpaths /usr/local/bin/tilt/lib`
  pkill -f $DAEMON
  java -Djava.library.path=$LIBPATH -cp .$JARPATHS:/usr/local/bin/tilt/TILT2.jar tilt.JettyServer -w 8082 >> /var/log/tilt.log 2>&1 &
}
# Stop the service tilt
do_stop() {
  pkill -f $DAEMON
}
### main logic ###
case "$1" in
  start)
        log_daemon_msg "Starting $NAME"
        do_start
        log_end_msg 0
        ;;

  stop)
        PID=`ps aux | grep $DAEMON | grep -v grep | awk '{print $2}'`
        if [ -n $PID ]; then
          log_daemon_msg "Stopping $NAME"
          do_stop
        else
          log_daemon_msg "$NAME not running"
        fi
        log_end_msg 0
        ;;

  restart)
        # Restart the daemon.
        $0 stop && sleep 2 && $0 start
        ;;

  status)
        PID=`ps aux | grep $DAEMON | grep -v grep | awk '{print $2}'`
        if [ -z $PID ]; then
          log_success_msg "$NAME is not running"
          exit 3
        else
          log_success_msg "$NAME is running"
          exit 0
        fi
        ;;
  *)
        log_action_msg "Usage: $0 {start|stop|restart}" 
        exit 1
        ;;
esac
exit 0
